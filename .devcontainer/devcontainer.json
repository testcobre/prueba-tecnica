// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/java-postgres
{
	"name": "prueba-tecnica",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-azuretools.vscode-docker",
				"vscjava.vscode-java-pack",
				"vscjava.vscode-java-test",
				"redhat.vscode-xml",
				"AmazonWebServices.amazon-q-vscode",
				"GitHub.copilot"
			]
			,"settings": {
				    "java.compile.nullAnalysis.mode": "automatic"
			}
		}
	},
	"containerEnv": {
		"DB_HOST":"prueba-tecnicas-postgres",
        "DB_NAME":"prueba_tecnica",
        "DB_USER":"postgres",
        "DB_PASS":"12345678"
	}

	// Features to add to the dev container. More info: https://containers.dev/features.
	,"features": {
		"ghcr.io/devcontainers/features/aws-cli:1": {}
	}

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// This can be used to network with other containers or with the host.
	,"forwardPorts": [8080,3000]

	// Use 'postCreateCommand' to run commands after the container is created.
	//,"postCreateCommand": "export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain monchis --domain-owner 869935069611 --region us-east-1 --query authorizationToken --output text`"

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
